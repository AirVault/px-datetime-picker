{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "px-datetime-picker-content.html",
      "properties": [
        {
          "name": "keyEventTarget",
          "type": "?EventTarget",
          "description": "The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 278,
              "column": 8
            },
            "end": {
              "line": 283,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "stopKeyboardEventPropagation",
          "type": "boolean",
          "description": "If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 292,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_boundKeyHandlers",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 294,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_imperativeKeyBindings",
          "type": "Object",
          "description": "own properties of everything on the \"prototype\".",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 303,
              "column": 8
            },
            "end": {
              "line": 308,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "keyBindings",
          "type": "!Object",
          "description": "To be used to express what combination of keys  will trigger the relative\ncallback. e.g. `keyBindings: { 'esc': '_onEscPressed'}`",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 321,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "blockFutureDates",
          "type": "boolean",
          "description": "Set this attribute when you do not want to allow future dates to be selected (future dates will be disabled and unclickable).",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 18,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "PxDatetimeBehavior.BlockDates"
        },
        {
          "name": "blockPastDates",
          "type": "boolean",
          "description": "Set this attribute when you do not want to allow past dates to be selected (past dates will be disabled and unclickable).",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 28,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "PxDatetimeBehavior.BlockDates"
        },
        {
          "name": "__localizationCache",
          "type": "Object",
          "description": "Internal singleton cache. This is the private implementation of the\nbehaviour; don't interact with it directly.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 127,
              "column": 2
            },
            "end": {
              "line": 131,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "language",
          "type": "string",
          "description": "set a default for localizing\nSet in datetime-picker",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 6
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "resources",
          "type": "Object",
          "description": "List of key/values to be included for translating this component.\nSet in datetime-picker",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 6
            },
            "end": {
              "line": 164,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "formats",
          "type": "Object",
          "description": "Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 176,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}",
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "useKeyIfMissing",
          "type": "boolean",
          "description": "Use the key for localization if value for language is missing.\nShould always be true for  our components",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 6
            },
            "end": {
              "line": 179,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "localize",
          "type": "Function",
          "description": "Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 198,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "bubbleEvent",
          "type": "boolean",
          "description": "If true, will bubble up the event to the parents",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 203,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "timeZone",
          "type": "string",
          "description": "Moment-timezone string for using a specific timezone. See\nhttp://momentjs.com/timezone/docs/#/data-loading/getting-zone-names/.\n\nIf not provided, tries to guess the current local timezone.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 54,
              "column": 8
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "minDate",
          "type": "Object",
          "description": "The minimum / earliest allowed date, as a a Moment object or an ISO 8601 String (dates before this will be disabled and unclickable).",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_minDateChanged\""
            }
          },
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "maxDate",
          "type": "Object",
          "description": "The maximum / latest allowed date, as a a Moment object or an ISO 8601 String (dates after this will be disabled and unclickable).",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 80,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_maxDateChanged\""
            }
          },
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "showButtons",
          "type": "boolean",
          "description": "Whether to show Apply and Cancel buttons in the components",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-button-behavior.html",
            "start": {
              "line": 17,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "PxDatetimeBehavior.Buttons"
        },
        {
          "name": "hideTime",
          "type": "boolean",
          "description": "Determines if the time will appear in the dropdown-content.\nSet in datetime-picker",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 108,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "timeFormat",
          "type": "string",
          "description": "Pass through property.\nSet in datetime-picker",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 6
            },
            "end": {
              "line": 115,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "Reflects if datetime-picker container is open/visible.\nSet in datetime-picker",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "fieldIsValid",
          "type": "boolean",
          "description": "Reflects if the field is valid from datetime-picker.\nSet in datetime-picker",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "fillContainer",
          "type": "boolean",
          "description": "false : the dropdown-content will open in a small pop over\ntrue : the dropdown-content will fill the window or\nan element defined by the `fitIntoElement`.\nSet in datetime-picker",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 141,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "fitIntoElement",
          "type": "Object",
          "description": "The element that the dropdown-content will fully expand into when opened.\n`fillContainer` must be true in order for this property to work\nset in datetime-picker",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "selectedDate",
          "type": "string",
          "description": "Displays the calendar's selected date in the dropdown-content\nwhen `fillContainer` is true",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"Select Date\""
        },
        {
          "name": "tempMomentObj",
          "type": "Object",
          "description": "Temporary moment object.\nPass through property.\nSet in datetime-picker and by `_todayClicked`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 189,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_updateSelectedDate\""
            }
          }
        },
        {
          "name": "fieldElem",
          "type": "HTMLElement",
          "description": "Set in datetime-picker",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 6
            },
            "end": {
              "line": 193,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "registered",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 325,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 327,
              "column": 6
            },
            "end": {
              "line": 329,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 331,
              "column": 6
            },
            "end": {
              "line": 333,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "addOwnKeyBinding",
          "description": "Can be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 343,
              "column": 6
            },
            "end": {
              "line": 347,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventString",
              "type": "string"
            },
            {
              "name": "handlerName",
              "type": "string"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "removeOwnKeyBindings",
          "description": "When called, will remove all imperatively-added key bindings.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 352,
              "column": 6
            },
            "end": {
              "line": 356,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "keyboardEventMatchesKeys",
          "description": "Returns true if a keyboard event matches `eventString`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 365,
              "column": 6
            },
            "end": {
              "line": 373,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "KeyboardEvent"
            },
            {
              "name": "eventString",
              "type": "string"
            }
          ],
          "return": {
            "type": "boolean"
          },
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_collectKeyBindings",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 375,
              "column": 6
            },
            "end": {
              "line": 385,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_prepKeyBindings",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 387,
              "column": 6
            },
            "end": {
              "line": 408,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_addKeyBinding",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 410,
              "column": 6
            },
            "end": {
              "line": 420,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventString"
            },
            {
              "name": "handlerName"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_resetKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 422,
              "column": 6
            },
            "end": {
              "line": 428,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_listenKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 430,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_unlistenKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 459,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_onKeyBindingEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 461,
              "column": 6
            },
            "end": {
              "line": 482,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyBindings"
            },
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_triggerKeyHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 484,
              "column": 6
            },
            "end": {
              "line": 495,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyCombo"
            },
            {
              "name": "handlerName"
            },
            {
              "name": "keyboardEvent"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "loadResources",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 209,
              "column": 2
            },
            "end": {
              "line": 242,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path"
            },
            {
              "name": "language"
            },
            {
              "name": "merge"
            }
          ],
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "__computeLocalize",
          "description": "Returns a computed `localize` method, based on the current `language`.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 247,
              "column": 2
            },
            "end": {
              "line": 287,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "language"
            },
            {
              "name": "resources"
            },
            {
              "name": "formats"
            }
          ],
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "__onRequestResponse",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 289,
              "column": 2
            },
            "end": {
              "line": 317,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            },
            {
              "name": "language"
            },
            {
              "name": "merge"
            }
          ],
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "__onRequestError",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 319,
              "column": 2
            },
            "end": {
              "line": 321,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "__checkLocalizationCache",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 323,
              "column": 2
            },
            "end": {
              "line": 331,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "proto"
            }
          ],
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "_updateMinMaxTz",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "_minDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 106,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "_maxDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 107,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "_preserveTime",
          "description": "Copies the time in toPreserve to dest and returns dest.\nused in `px-calendar-picker`, `px-datetime-picker`, and `px-datetime-range-panel`",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 123,
              "column": 4
            },
            "end": {
              "line": 131,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "toPreserve"
            },
            {
              "name": "dest"
            }
          ],
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "_todayClicked",
          "description": "'Today' button/text has been clicked",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 4
            },
            "end": {
              "line": 201,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_open",
          "description": "Opens the calendar.\nCalled in datetime-picker",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 4
            },
            "end": {
              "line": 208,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_close",
          "description": "Closes the calendar.\nCalled in datetime-picker",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 4
            },
            "end": {
              "line": 215,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_updateSelectedDate",
          "description": "Sync `selcetedDate` with calendar's moment obj",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 4
            },
            "end": {
              "line": 223,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "moment"
            }
          ]
        },
        {
          "name": "_handleField",
          "description": "Determine if field should be displayed in container.\nThe dt-field will only appear in the container if fillContainer is true",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hideTime"
            },
            {
              "name": "fillContainer"
            }
          ]
        },
        {
          "name": "_handleShowButtons",
          "description": "If fillContainter is true show buttons",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 236,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "showButtons"
            },
            {
              "name": "fillContainer"
            }
          ]
        },
        {
          "name": "_getVerticalOffset",
          "description": "********************************************************************* //",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 4
            },
            "end": {
              "line": 243,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fillContainer"
            }
          ]
        },
        {
          "name": "_getPositionTarget",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 4
            },
            "end": {
              "line": 246,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fillContainer"
            },
            {
              "name": "fitIntoElement"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 87,
          "column": 10
        },
        "end": {
          "line": 247,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "key-event-target",
          "description": "The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 278,
              "column": 8
            },
            "end": {
              "line": 283,
              "column": 9
            }
          },
          "metadata": {},
          "type": "?EventTarget",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "stop-keyboard-event-propagation",
          "description": "If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 292,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "block-future-dates",
          "description": "Set this attribute when you do not want to allow future dates to be selected (future dates will be disabled and unclickable).",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 18,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "PxDatetimeBehavior.BlockDates"
        },
        {
          "name": "block-past-dates",
          "description": "Set this attribute when you do not want to allow past dates to be selected (past dates will be disabled and unclickable).",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 28,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "PxDatetimeBehavior.BlockDates"
        },
        {
          "name": "language",
          "description": "set a default for localizing\nSet in datetime-picker",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 6
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "resources",
          "description": "List of key/values to be included for translating this component.\nSet in datetime-picker",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 6
            },
            "end": {
              "line": 164,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "formats",
          "description": "Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 176,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "use-key-if-missing",
          "description": "Use the key for localization if value for language is missing.\nShould always be true for  our components",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 6
            },
            "end": {
              "line": 179,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "localize",
          "description": "Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 198,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Function",
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "bubble-event",
          "description": "If true, will bubble up the event to the parents",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 203,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "time-zone",
          "description": "Moment-timezone string for using a specific timezone. See\nhttp://momentjs.com/timezone/docs/#/data-loading/getting-zone-names/.\n\nIf not provided, tries to guess the current local timezone.",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 54,
              "column": 8
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "min-date",
          "description": "The minimum / earliest allowed date, as a a Moment object or an ISO 8601 String (dates before this will be disabled and unclickable).",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "max-date",
          "description": "The maximum / latest allowed date, as a a Moment object or an ISO 8601 String (dates after this will be disabled and unclickable).",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 80,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "show-buttons",
          "description": "Whether to show Apply and Cancel buttons in the components",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-button-behavior.html",
            "start": {
              "line": 17,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "PxDatetimeBehavior.Buttons"
        },
        {
          "name": "hide-time",
          "description": "Determines if the time will appear in the dropdown-content.\nSet in datetime-picker",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 108,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "time-format",
          "description": "Pass through property.\nSet in datetime-picker",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 6
            },
            "end": {
              "line": 115,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "opened",
          "description": "Reflects if datetime-picker container is open/visible.\nSet in datetime-picker",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "field-is-valid",
          "description": "Reflects if the field is valid from datetime-picker.\nSet in datetime-picker",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "fill-container",
          "description": "false : the dropdown-content will open in a small pop over\ntrue : the dropdown-content will fill the window or\nan element defined by the `fitIntoElement`.\nSet in datetime-picker",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 141,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "fit-into-element",
          "description": "The element that the dropdown-content will fully expand into when opened.\n`fillContainer` must be true in order for this property to work\nset in datetime-picker",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "selected-date",
          "description": "Displays the calendar's selected date in the dropdown-content\nwhen `fillContainer` is true",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "temp-moment-obj",
          "description": "Temporary moment object.\nPass through property.\nSet in datetime-picker and by `_todayClicked`",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 189,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "field-elem",
          "description": "Set in datetime-picker",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 6
            },
            "end": {
              "line": 193,
              "column": 28
            }
          },
          "metadata": {},
          "type": "HTMLElement"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "app-localize-resources-error",
          "description": "app-localize-resources-error",
          "metadata": {},
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "app-localize-resources-loaded",
          "description": "app-localize-resources-loaded",
          "metadata": {},
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "time-zone-changed",
          "description": "Fired when the `timeZone` property changes.",
          "metadata": {},
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "type": "CustomEvent",
          "name": "opened-changed",
          "description": "Fired when the `opened` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "temp-moment-obj-changed",
          "description": "Fired when the `tempMomentObj` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "px-datetime-picker-content"
    },
    {
      "description": "The datetime components rely on [Moment.js](https://momentjs.com/) and [Moment Timezone](https://momentjs.com/timezone/).\n\n#### Usage\n\n    <px-datetime-picker\n      collapse-at=\"720\">\n    </px-datetime-picker>\n\n\n#### Styling\nThe following custom properties are available for styling. Please also refer to px-forms-design and px-buttons-design for additional style variables used by this component.\n\nCustom property | Description\n:----------------|:-------------\n`--px-datetime-picker-background-color` | Background color for the panel\n`--px-datetime-picker-btn-container-background-color` | Background color for the button wrapper When `fillContainer` is true\n`--px-datetime-picker-border-color` | Border color for the panel\n`--px-datetime-picker-z-index` | The z-index of the container",
      "summary": "",
      "path": "px-datetime-picker.html",
      "properties": [
        {
          "name": "keyEventTarget",
          "type": "?EventTarget",
          "description": "The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 278,
              "column": 8
            },
            "end": {
              "line": 283,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "stopKeyboardEventPropagation",
          "type": "boolean",
          "description": "If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 292,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_boundKeyHandlers",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 294,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_imperativeKeyBindings",
          "type": "Object",
          "description": "own properties of everything on the \"prototype\".",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 303,
              "column": 8
            },
            "end": {
              "line": 308,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "keyBindings",
          "type": "Object",
          "description": "Key bindings for iron-a11y-keys-behavior",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 286,
              "column": 4
            },
            "end": {
              "line": 289,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "blockFutureDates",
          "type": "boolean",
          "description": "Set this attribute when you do not want to allow future dates to be selected (future dates will be disabled and unclickable).",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 18,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "PxDatetimeBehavior.BlockDates"
        },
        {
          "name": "blockPastDates",
          "type": "boolean",
          "description": "Set this attribute when you do not want to allow past dates to be selected (past dates will be disabled and unclickable).",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 28,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "PxDatetimeBehavior.BlockDates"
        },
        {
          "name": "__localizationCache",
          "type": "Object",
          "description": "Internal singleton cache. This is the private implementation of the\nbehaviour; don't interact with it directly.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 127,
              "column": 2
            },
            "end": {
              "line": 131,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "language",
          "type": "string",
          "description": "Set a default for localizing",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 6
            },
            "end": {
              "line": 260,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"en\""
        },
        {
          "name": "resources",
          "type": "Object",
          "description": "List of key/values to be included for translating this component",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 6
            },
            "end": {
              "line": 253,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{\"en\":{\"Today\":\"Today\"}}"
        },
        {
          "name": "formats",
          "type": "Object",
          "description": "Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 176,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}",
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "useKeyIfMissing",
          "type": "boolean",
          "description": "Use the key for localization if value for  language is missing. Should\nalways be true for  our components",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 6
            },
            "end": {
              "line": 268,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "localize",
          "type": "Function",
          "description": "Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 198,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "bubbleEvent",
          "type": "boolean",
          "description": "If true, will bubble up the event to the parents",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 203,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "timeZone",
          "type": "string",
          "description": "Moment-timezone string for using a specific timezone. See\nhttp://momentjs.com/timezone/docs/#/data-loading/getting-zone-names/.\n\nIf not provided, tries to guess the current local timezone.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 54,
              "column": 8
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "minDate",
          "type": "Object",
          "description": "The minimum / earliest allowed date, as a a Moment object or an ISO 8601 String (dates before this will be disabled and unclickable).",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_minDateChanged\""
            }
          },
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "maxDate",
          "type": "Object",
          "description": "The maximum / latest allowed date, as a a Moment object or an ISO 8601 String (dates after this will be disabled and unclickable).",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 80,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_maxDateChanged\""
            }
          },
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "momentObj",
          "type": "Object",
          "description": "Moment value with the date or time to display.  Will be parsed according to the moment format. (See momentFormat property.)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-behavior.html",
            "start": {
              "line": 17,
              "column": 6
            },
            "end": {
              "line": 23,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "null",
          "inheritedFrom": "PxDatetimeBehavior.SingleMoment"
        },
        {
          "name": "_tempMomentObj",
          "type": "Object",
          "description": "temporary moment object used for validation and display. This\nobject should be used by subcomponents when we want to \"try\"\na value and see the result of validation AND/OR give us the\nability to rollback (cancel) or apply",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-behavior.html",
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "PxDatetimeBehavior.TempMoment"
        },
        {
          "name": "showButtons",
          "type": "boolean",
          "description": "Whether to show Apply and Cancel buttons in the components",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-button-behavior.html",
            "start": {
              "line": 17,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "PxDatetimeBehavior.Buttons"
        },
        {
          "name": "containerType",
          "type": "string",
          "description": "An optional type set on the px-overlay-container and px-overlay-content to associate specific overlay-contents with their container",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-overlay/px-overlay-behavior.html",
            "start": {
              "line": 23,
              "column": 4
            },
            "end": {
              "line": 23,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "PxOverlayBehavior.sharedProperties"
        },
        {
          "name": "showTimeZone",
          "type": "string",
          "description": "Can be set to show the timezone in the field. values:\n- 'dropdown': shows the time zone as a dropdown which the user can use to\nselect a different time zone. Only contains a subset of all time zones\n- 'extendedDropdown': shows the time zone as a dropdown which the user can use to\nselect a different time zone. Contains all existing time zones (588)\n- 'text': shows the time zone as text, non editable\n- 'abbreviatedText': shows the time zone as an abbreviated text, non editable (such as PST, EST...)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 6
            },
            "end": {
              "line": 127,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "hideTime",
          "type": "boolean",
          "description": "Doesn't display the time in the field and panel(if applicable)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "dateFormat",
          "type": "string",
          "description": "Moment format used for the date",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 141,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"MM/DD/YYYY\""
        },
        {
          "name": "timeFormat",
          "type": "string",
          "description": "Moment format used for the time",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"HH:mm A\""
        },
        {
          "name": "required",
          "type": "boolean",
          "description": "Boolean stating if the picker is required.\nPicker will become invalid if a user leaves\nthe picker empty when required is true.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "Reflects if datetime-picker container is visible.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processClose\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "fieldIsValid",
          "type": "boolean",
          "description": "Reflects if the field is valid.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 172,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "fillContainer",
          "type": "boolean",
          "description": "If false, the contents will open in a panel.\n\nIf true, the contents will fill the window\nor an element defined by the `fitIntoElement`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_syncFillContainer\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_fillContainer",
          "type": "boolean",
          "description": "Used to toggle fillContainer from iron-media-query.\nWithout a separate variable fillContainer would never be\ntrue with a screen size larger then the value of collapseAt",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 6
            },
            "end": {
              "line": 192,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "fitIntoElement",
          "type": "Object",
          "description": "The element that the contents will fully expand into\nwhen it is opened.\n\n`fillContainer` must be true in order for this property to work",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 6
            },
            "end": {
              "line": 203,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_syncFitIntoElement\""
            }
          }
        },
        {
          "name": "_fitIntoElement",
          "type": "Object",
          "description": "Used to toggle `fitIntoElement` from iron-media-query.\nWithout separate variable each time the screen was\nsmaller than collpasAt the `fitIntoElement` would\nget over written.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 6
            },
            "end": {
              "line": 212,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "collapseAt",
          "type": "number",
          "description": "The width below which the datetime picker will collapse into a mobile\nfriendly view. This will supersede any other configuration if set.\nUse a number (e.g. `450`) which will be converted to a\npixel value (e.g. '450px').\n\nIf no value is provided, the datetime picker will not collapse\nautomatically.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 6
            },
            "end": {
              "line": 224,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "collapsed",
          "type": "boolean",
          "description": "True if screen size is smaller than the `collapseAt` value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 233,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_belowCollapseSize",
          "type": "boolean",
          "description": "Output of iron-media-query",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 6
            },
            "end": {
              "line": 240,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_handleBelowCollapseSizeChanged\""
            }
          }
        },
        {
          "name": "hoist",
          "type": "boolean",
          "description": "Specifies if the dropdown content should get hoisted to a container in order to escape its current stacking context",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 6
            },
            "end": {
              "line": 275,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "registered",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 325,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "attached",
          "description": "We don't need to listen to the time field from the calendar\nsense it only updates the temp moment but should never trigger an\nactual validation",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 4
            },
            "end": {
              "line": 298,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 331,
              "column": 6
            },
            "end": {
              "line": 333,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "addOwnKeyBinding",
          "description": "Can be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 343,
              "column": 6
            },
            "end": {
              "line": 347,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventString",
              "type": "string"
            },
            {
              "name": "handlerName",
              "type": "string"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "removeOwnKeyBindings",
          "description": "When called, will remove all imperatively-added key bindings.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 352,
              "column": 6
            },
            "end": {
              "line": 356,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "keyboardEventMatchesKeys",
          "description": "Returns true if a keyboard event matches `eventString`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 365,
              "column": 6
            },
            "end": {
              "line": 373,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "KeyboardEvent"
            },
            {
              "name": "eventString",
              "type": "string"
            }
          ],
          "return": {
            "type": "boolean"
          },
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_collectKeyBindings",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 375,
              "column": 6
            },
            "end": {
              "line": 385,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_prepKeyBindings",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 387,
              "column": 6
            },
            "end": {
              "line": 408,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_addKeyBinding",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 410,
              "column": 6
            },
            "end": {
              "line": 420,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventString"
            },
            {
              "name": "handlerName"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_resetKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 422,
              "column": 6
            },
            "end": {
              "line": 428,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_listenKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 430,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_unlistenKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 459,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_onKeyBindingEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 461,
              "column": 6
            },
            "end": {
              "line": 482,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyBindings"
            },
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_triggerKeyHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 484,
              "column": 6
            },
            "end": {
              "line": 495,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyCombo"
            },
            {
              "name": "handlerName"
            },
            {
              "name": "keyboardEvent"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "loadResources",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 209,
              "column": 2
            },
            "end": {
              "line": 242,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path"
            },
            {
              "name": "language"
            },
            {
              "name": "merge"
            }
          ],
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "__computeLocalize",
          "description": "Returns a computed `localize` method, based on the current `language`.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 247,
              "column": 2
            },
            "end": {
              "line": 287,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "language"
            },
            {
              "name": "resources"
            },
            {
              "name": "formats"
            }
          ],
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "__onRequestResponse",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 289,
              "column": 2
            },
            "end": {
              "line": 317,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            },
            {
              "name": "language"
            },
            {
              "name": "merge"
            }
          ],
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "__onRequestError",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 319,
              "column": 2
            },
            "end": {
              "line": 321,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "__checkLocalizationCache",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 323,
              "column": 2
            },
            "end": {
              "line": 331,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "proto"
            }
          ],
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "_updateMinMaxTz",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "_minDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 106,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "_maxDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 107,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "_preserveTime",
          "description": "Copies the time in toPreserve to dest and returns dest.\nused in `px-calendar-picker`, `px-datetime-picker`, and `px-datetime-range-panel`",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 123,
              "column": 4
            },
            "end": {
              "line": 131,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "toPreserve"
            },
            {
              "name": "dest"
            }
          ],
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "_localeChanged",
          "description": "Make sure the moment obj pick up the possibly new moment locale",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-behavior.html",
            "start": {
              "line": 32,
              "column": 4
            },
            "end": {
              "line": 36,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxDatetimeBehavior.SingleMoment"
        },
        {
          "name": "_timeZoneChanged",
          "description": "Makes sure the moment object reflects the right timezone.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-behavior.html",
            "start": {
              "line": 40,
              "column": 4
            },
            "end": {
              "line": 45,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxDatetimeBehavior.SingleMoment"
        },
        {
          "name": "_applyTempMoment",
          "description": "Applies value of temp moment to public momentObj",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-behavior.html",
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 81,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxDatetimeBehavior.TempMoment"
        },
        {
          "name": "_rollbackTempMoment",
          "description": "Rollback value of temp moment to use public momentObj",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-behavior.html",
            "start": {
              "line": 85,
              "column": 5
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxDatetimeBehavior.TempMoment"
        },
        {
          "name": "_localeChangedTemp",
          "description": "Make sure the moment obj pick up the possibly new moment locale",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-behavior.html",
            "start": {
              "line": 91,
              "column": 5
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxDatetimeBehavior.TempMoment"
        },
        {
          "name": "_timeZoneChangedTemp",
          "description": "Makes sure the moment object reflects the right timezone.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-behavior.html",
            "start": {
              "line": 99,
              "column": 5
            },
            "end": {
              "line": 104,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxDatetimeBehavior.TempMoment"
        },
        {
          "name": "focus",
          "description": "Propagate focus from the host to px-datetime-field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 302,
              "column": 4
            },
            "end": {
              "line": 304,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onEsc",
          "description": "Rolls back temp moment to the momentObj.\nCloses panel",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 4
            },
            "end": {
              "line": 312,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_onEnter",
          "description": "Runs validation",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 316,
              "column": 4
            },
            "end": {
              "line": 318,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_handleTap",
          "description": "If the calendar is open and the dropdown is selected, close the calendar",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 322,
              "column": 4
            },
            "end": {
              "line": 332,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_tempMomentChanged",
          "description": "Ran when the momentObjs for field or content have been updated.\nIf it is from the field, then apply the momentObj.\nIf it is from the content and we have no buttons, then apply the momentObj.\nElse, wait for button events.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 339,
              "column": 4
            },
            "end": {
              "line": 358,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "origin"
            }
          ]
        },
        {
          "name": "_validateCalendarMoment",
          "description": "Apply temp moment if the dropdown is opened and\nthe field is valid",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 4
            },
            "end": {
              "line": 372,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_buttonClicked",
          "description": "submit: validate values\ncancel: rolls back temp moment to the momentObj &closes panel",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 377,
              "column": 4
            },
            "end": {
              "line": 384,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_iconClicked",
          "description": "Opens content",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 388,
              "column": 4
            },
            "end": {
              "line": 392,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_processClose",
          "description": "If opened is false and showButtons true\nthen cancel selection",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 397,
              "column": 4
            },
            "end": {
              "line": 402,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal"
            },
            {
              "name": "oldVal"
            }
          ]
        },
        {
          "name": "_getCollapseQuery",
          "description": "Return the collapseAt value with px after it",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 410,
              "column": 4
            },
            "end": {
              "line": 417,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "collapseAt"
            }
          ]
        },
        {
          "name": "_collapseQueryIsValid",
          "description": "Double checks that the collapseAt value is valid",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 421,
              "column": 4
            },
            "end": {
              "line": 433,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "query"
            }
          ]
        },
        {
          "name": "_handleBelowCollapseSizeChanged",
          "description": "If the window is smaller than the `collapseAt` value\nset panel to fill the whole window\n\nIf the window is larger than the `collapseAt` value\nreset `_fillContainer` & `_fitIntoElement` to their\noriginal values",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 442,
              "column": 4
            },
            "end": {
              "line": 453,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal"
            },
            {
              "name": "oldVal"
            }
          ]
        },
        {
          "name": "_syncFillContainer",
          "description": "Sync external fillConatiner with internal _fillConatiner",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 461,
              "column": 4
            },
            "end": {
              "line": 463,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal"
            },
            {
              "name": "oldVal"
            }
          ]
        },
        {
          "name": "_syncFitIntoElement",
          "description": "Sync external fitIntoElement with internal _fitIntoElement.\nMake sure `_fitIntoElement` isn't over written if\n`_belowCollapseSize` is true",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 469,
              "column": 4
            },
            "end": {
              "line": 473,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal"
            },
            {
              "name": "oldVal"
            }
          ]
        },
        {
          "name": "_returnField",
          "description": "Return field node",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 477,
              "column": 4
            },
            "end": {
              "line": 479,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 99,
          "column": 10
        },
        "end": {
          "line": 480,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "key-event-target",
          "description": "The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 278,
              "column": 8
            },
            "end": {
              "line": 283,
              "column": 9
            }
          },
          "metadata": {},
          "type": "?EventTarget",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "stop-keyboard-event-propagation",
          "description": "If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 292,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "block-future-dates",
          "description": "Set this attribute when you do not want to allow future dates to be selected (future dates will be disabled and unclickable).",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 18,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "PxDatetimeBehavior.BlockDates"
        },
        {
          "name": "block-past-dates",
          "description": "Set this attribute when you do not want to allow past dates to be selected (past dates will be disabled and unclickable).",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 28,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "PxDatetimeBehavior.BlockDates"
        },
        {
          "name": "language",
          "description": "Set a default for localizing",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 6
            },
            "end": {
              "line": 260,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "resources",
          "description": "List of key/values to be included for translating this component",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 6
            },
            "end": {
              "line": 253,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "formats",
          "description": "Optional dictionary of user defined formats, as explained here:\nhttp://formatjs.io/guides/message-syntax/#custom-formats\n\nFor example, a valid dictionary of formats would be:\nthis.formats = {\n   number: { USD: { style: 'currency', currency: 'USD' } }\n}",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 176,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "use-key-if-missing",
          "description": "Use the key for localization if value for  language is missing. Should\nalways be true for  our components",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 6
            },
            "end": {
              "line": 268,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "localize",
          "description": "Translates a string to the current `language`. Any parameters to the\nstring should be passed in order, as follows:\n`localize(stringKey, param1Name, param1Value, param2Name, param2Value)`",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 198,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Function",
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "bubble-event",
          "description": "If true, will bubble up the event to the parents",
          "sourceRange": {
            "file": "bower_components/app-localize-behavior/app-localize-behavior.html",
            "start": {
              "line": 203,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "name": "time-zone",
          "description": "Moment-timezone string for using a specific timezone. See\nhttp://momentjs.com/timezone/docs/#/data-loading/getting-zone-names/.\n\nIf not provided, tries to guess the current local timezone.",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 54,
              "column": 8
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "min-date",
          "description": "The minimum / earliest allowed date, as a a Moment object or an ISO 8601 String (dates before this will be disabled and unclickable).",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "max-date",
          "description": "The maximum / latest allowed date, as a a Moment object or an ISO 8601 String (dates after this will be disabled and unclickable).",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-shared-behavior.html",
            "start": {
              "line": 80,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "name": "moment-obj",
          "description": "Moment value with the date or time to display.  Will be parsed according to the moment format. (See momentFormat property.)",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-behavior.html",
            "start": {
              "line": 17,
              "column": 6
            },
            "end": {
              "line": 23,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "PxDatetimeBehavior.SingleMoment"
        },
        {
          "name": "show-buttons",
          "description": "Whether to show Apply and Cancel buttons in the components",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-button-behavior.html",
            "start": {
              "line": 17,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "PxDatetimeBehavior.Buttons"
        },
        {
          "name": "container-type",
          "description": "An optional type set on the px-overlay-container and px-overlay-content to associate specific overlay-contents with their container",
          "sourceRange": {
            "file": "bower_components/px-overlay/px-overlay-behavior.html",
            "start": {
              "line": 23,
              "column": 4
            },
            "end": {
              "line": 23,
              "column": 25
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "PxOverlayBehavior.sharedProperties"
        },
        {
          "name": "show-time-zone",
          "description": "Can be set to show the timezone in the field. values:\n- 'dropdown': shows the time zone as a dropdown which the user can use to\nselect a different time zone. Only contains a subset of all time zones\n- 'extendedDropdown': shows the time zone as a dropdown which the user can use to\nselect a different time zone. Contains all existing time zones (588)\n- 'text': shows the time zone as text, non editable\n- 'abbreviatedText': shows the time zone as an abbreviated text, non editable (such as PST, EST...)",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 6
            },
            "end": {
              "line": 127,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "hide-time",
          "description": "Doesn't display the time in the field and panel(if applicable)",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "date-format",
          "description": "Moment format used for the date",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 141,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "time-format",
          "description": "Moment format used for the time",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "required",
          "description": "Boolean stating if the picker is required.\nPicker will become invalid if a user leaves\nthe picker empty when required is true.",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "opened",
          "description": "Reflects if datetime-picker container is visible.",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "field-is-valid",
          "description": "Reflects if the field is valid.",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 172,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "fill-container",
          "description": "If false, the contents will open in a panel.\n\nIf true, the contents will fill the window\nor an element defined by the `fitIntoElement`.",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "fit-into-element",
          "description": "The element that the contents will fully expand into\nwhen it is opened.\n\n`fillContainer` must be true in order for this property to work",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 6
            },
            "end": {
              "line": 203,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "collapse-at",
          "description": "The width below which the datetime picker will collapse into a mobile\nfriendly view. This will supersede any other configuration if set.\nUse a number (e.g. `450`) which will be converted to a\npixel value (e.g. '450px').\n\nIf no value is provided, the datetime picker will not collapse\nautomatically.",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 6
            },
            "end": {
              "line": 224,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "collapsed",
          "description": "True if screen size is smaller than the `collapseAt` value",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 233,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "hoist",
          "description": "Specifies if the dropdown content should get hoisted to a container in order to escape its current stacking context",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 6
            },
            "end": {
              "line": 275,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "app-localize-resources-error",
          "description": "app-localize-resources-error",
          "metadata": {},
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "app-localize-resources-loaded",
          "description": "app-localize-resources-loaded",
          "metadata": {},
          "inheritedFrom": "Polymer.AppLocalizeBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "time-zone-changed",
          "description": "Fired when the `timeZone` property changes.",
          "metadata": {},
          "inheritedFrom": "PxDatetimeBehavior.Shared"
        },
        {
          "type": "CustomEvent",
          "name": "moment-obj-changed",
          "description": "Fired when the `momentObj` property changes.",
          "metadata": {},
          "inheritedFrom": "PxDatetimeBehavior.SingleMoment"
        },
        {
          "type": "CustomEvent",
          "name": "collapsed-changed",
          "description": "Fired when the `collapsed` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "px-datetime-picker"
    }
  ]
}
